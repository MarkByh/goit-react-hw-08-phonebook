{"version":3,"file":"static/js/812.264e8645.chunk.js","mappings":"0OACA,EAA0B,0BAA1B,EAA2D,uBAA3D,EAAwF,sBAAxF,EAAsH,wB,2DCQhHA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,WAC7DN,SAAUE,EAAAA,KAAaE,IAAI,EAAG,cAAcE,WAC5CP,MAAOG,EAAAA,KAAaH,QAAQO,aAGjBC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAACC,EAAA,EAAD,CAAMC,UAAU,OAAOH,UAAWC,EAAWG,GAAIC,EAAAA,GAASC,GAAG,QAA7D,gBAGA,SAAC,KAAD,CACEnB,cAAeA,EACfoB,SAZe,SAACC,EAAUC,GAC9BX,GAASY,EAAAA,EAAAA,KAAS,UAAKF,KACvBC,EAAQE,WACT,EAUKC,iBAAkBrB,EAHpB,SAKG,gBAAGsB,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAACC,EAAA,EAAD,CAAMX,GAAIY,EAAAA,GAAV,WACE,UAACD,EAAA,QAAD,CAAYf,UAAU,OAAOiB,UAAU,oBAAvC,WACE,SAACF,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEX,GAAIc,EAAAA,GACJC,KAAK,OACLC,YAAY,WACZhC,KAAK,SAENyB,EAAOzB,MAAQ0B,EAAQ1B,MACtB,gBAAKY,UAAWC,EAAhB,SAA8BY,EAAOzB,OACnC,SAGN,UAAC2B,EAAA,QAAD,CAAYf,UAAU,OAAOiB,UAAU,iBAAvC,WACE,SAACF,EAAA,QAAD,6BACA,SAACA,EAAA,UAAD,CACEX,GAAIc,EAAAA,GACJC,KAAK,QACLC,YAAY,oBACZhC,KAAK,UAENyB,EAAOxB,OAASyB,EAAQzB,OACvB,gBAAKW,UAAWC,EAAhB,SAA8BY,EAAOxB,QACnC,SAGN,UAAC0B,EAAA,QAAD,CAAYf,UAAU,OAAOiB,UAAU,oBAAvC,WACE,SAACF,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEX,GAAIc,EAAAA,GACJC,KAAK,WACLC,YAAY,8BACZhC,KAAK,aAENyB,EAAOvB,UAAYwB,EAAQxB,UAC1B,gBAAKU,UAAWC,EAAhB,SAA8BY,EAAOvB,WACnC,SAEN,SAAC+B,EAAA,EAAD,CAAQC,QAAQ,YAAYH,KAAK,SAASI,GAAI,CAAEC,MAAO,QAAvD,wBAxCH,KA8CH,SAACtB,EAAA,EAAD,CAAMF,UAAWC,EAAYE,UAAU,QAAQC,GAAIC,EAAAA,GAASC,GAAG,SAA/D,uBAKL,E,UCrFc,SAASmB,IACtB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,GAE1B,OACE,4BACE,SAAC,KAAD,WACE,+CAEF,SAACjC,EAAD,IACC6B,IAAcG,IAAS,wCAG7B,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/register.module.css?b8ce","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logform\":\"register_logform__eOpNg\",\"link\":\"register_link__VwdSY\",\"btn\":\"register_btn__9DtBb\",\"error\":\"register_error__yUGnP\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Form } from 'react-bootstrap';\nimport style from './register.module.css';\nimport { Formik, Form as FormikForm, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport { Button, Link } from '@mui/material/';\nimport * as Yup from 'yup';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst Schema = Yup.object().shape({\n  name: Yup.string().min(6, 'Too Short!').max(20, 'Too Long!').required(),\n  password: Yup.string().min(8, 'Too Short!').required(),\n  email: Yup.string().email().required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (formData, actions) => {\n    dispatch(register({ ...formData }));\n    actions.resetForm();\n  };\n\n  return (\n    <div className={style.logform}>\n      <Link underline=\"none\" className={style.btn} as={NavLink} to=\"index\">\n        x\n      </Link>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={Schema}\n      >\n        {({ errors, touched }) => (\n          <Form as={FormikForm}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                as={Field}\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"name\"\n              />\n              {errors.name && touched.name ? (\n                <div className={style.error}>{errors.name}</div>\n              ) : null}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                as={Field}\n                type=\"email\"\n                placeholder=\"myemail@gmail.com\"\n                name=\"email\"\n              />\n              {errors.email && touched.email ? (\n                <div className={style.error}>{errors.email}</div>\n              ) : null}\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                as={Field}\n                type=\"password\"\n                placeholder=\"Password (min 8 characters)\"\n                name=\"password\"\n              />\n              {errors.password && touched.password ? (\n                <div className={style.error}>{errors.password}</div>\n              ) : null}\n            </Form.Group>\n            <Button variant=\"contained\" type=\"submit\" sx={{ width: '67ch' }}>\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Link className={style.link} underline=\"hover\" as={NavLink} to=\"/login\">\n        Sign in\n      </Link>\n    </div>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { useSelector } from 'react-redux';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { selectErrorUser, selectIsLoadingUser } from 'redux/auth/selectors';\n\nexport default function Register() {\n  const isLoading = useSelector(selectIsLoadingUser);\n  const error = useSelector(selectErrorUser);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n      {isLoading && !error && <b>Loading...</b>}\n    </div>\n  );\n}\n"],"names":["initialValues","name","email","password","Schema","Yup","shape","min","max","required","RegisterForm","dispatch","useDispatch","className","style","Link","underline","as","NavLink","to","onSubmit","formData","actions","register","resetForm","validationSchema","errors","touched","Form","FormikForm","controlId","Field","type","placeholder","Button","variant","sx","width","Register","isLoading","useSelector","selectIsLoadingUser","error","selectErrorUser"],"sourceRoot":""}